# FLIGHT FINDERS

**COMAPANY NAME** : SMART BRIDGE

**NAME** : D.DEVA KUMAR

**INTERN ID** :LTVIP2025TMID57394

**DOMAIN** : FULL STACK MERN DEVELOPER

**BATCH DURATION** : 19th MAY 2025 to 30th JUNE 2025

# DOCUMENTATION

(https://github.com/user-attachments/files/21083971/flight.booking.fligt.finders.docx)

# DESCRIPTION OF FLIGHT FINDERS


## ✈️ Flight Finders – Internship Project

**Flight Finders** is a console-based (or GUI-based, depending on your version) application developed as part of my internship project. The program is designed to simulate a basic flight booking system where users can **search for available flights**, **filter based on preferences**, and **book tickets** with ease.

### 🔧 Features:

* ✅ Search flights by **source**, **destination**, and **travel date**
* ✅ View a list of available flights with **flight number**, **airline**, **departure & arrival time**, and **fare**
* ✅ Book selected flights and **generate ticket details**
* ✅ Basic data validation and user input handling
* ✅ Stored flight data using arrays / lists / files (based on your implementation)
* ✅ Option to **cancel bookings** or **view booked ticket history** (if implemented)

### 💻 Tech Stack:

* **Language:** Java / Python / C++ (Edit as per your project)
* **Platform:** Console Application / GUI (Swing, Tkinter, etc.)
* **Tools:** VS Code / Eclipse / IntelliJ (if applicable)

### 📂 Project Structure:

```
FlightFinders/
├── src/
│   ├── Flight.java
│   ├── Booking.java
│   ├── FlightFinder.java
│   └── ...
├── data/
│   └── flights.txt
├── README.md
└── ...
```

### 📌 Learning Outcomes:

* Practical implementation of **object-oriented programming**
* Enhanced understanding of **file handling** and **data structures**
* Experience in designing **user-friendly logic flow**
* Real-world exposure to building modular and maintainable code

---

If you'd like, I can help generate a full `README.md` file for your GitHub repo. Just let me know what language and features you used (e.g., Java, console-based, supports booking and cancellation, etc.).

** output **
![Image]
     (https://github.com/user-attachments/assets/fbf94377-d9e7-4341-b10a-166251672c19)

** DEMO VIDEO **

https://github.com/user-attachments/assets/7bdf2e05-cd18-4663-9363-b1a2bd0ff250


